sudo su
systemctl start docker
docker swarm leave --force
git clone https://github.com/DaniyalAkbar/HPC-Cluster.git
cd HPC-Cluster
cd alpine-mpich/cluster
chmod +x swarm.sh

./swarm.sh config set
	IMAGE_TAG=daniyal1217/fyp
	PROJECT_NAME=mpi
	NETWORK_NAME=mpi-network
	NETWORK_SUBNET=10.0.9.0/24 (replace with masternode subnet mask)
	SSH_ADDR= <masternode IP address>
	SSH_PORT=2222

nano .swarm.conf
docker swarm init --advertise-addr <masternode IP address>
docker node promote <VM name> (repeat this command for all the virtual machines name 1 by 1)
docker node ls
docker login
./swarm.sh up size=3 ('3' is the number of virtual machines spin up)
./swarm.sh login
mpirun hostname
mpirun ./mpi-hello-world





















1. we run 3 virtual machines on Google Cloud which would be running centos 7 iso
2. then we will install docker on all the nodes and start their service
3. Git clone repository from DaniyalAkbar GitHub account
4. we then enter the /alpine-mpich/cluster directory and make swarm.sh file executable by this command "chmod +x swarm.sh"
5. next we need to make the config file where we can add our VM IP addresses by running this command ".swarm.sh config set
6. we would then open the swarm.config file in text editor via nano command and add the IP address
7. After that we need to start our swarm mode through this command: docker swarm init --advertise-addr <masternode IP>
8. The token generated by previous command needs to be feed into all the other compute nodes which makes them a part of the swarm.
9. After that we simply need to spin up our cluster by executing our ./swarm.sh file. "./swarm.sh up size=3". This would fetch the docker image from the Docker Hub registry and spin up the container.
10. The cluster would be up and ready, we now simply have to login to gain the interactive shell access using the SSH protocol. Command is: "./swarm login"
11. you are done. You are now in Alpine Linux 3.4 terminal. You can now start your development the way you want. 
12. Thank you. Happy development!


